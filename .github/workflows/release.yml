name: release
on:
  push:
    branches:
      - 'main'
permissions:
  contents: write
  pull-requests: write
jobs:
  version_changed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Version changed
        id: version_changed
        uses: tj-actions/changed-files@v45
        with:
          files: .release-please-manifest.json
    outputs:
      has_changes: ${{steps.version_changed.outputs.any_changed}}

  goreleaser:
    needs: [version_changed]
    if: needs.version_changed.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set local tag for goreleaser to read from
        run: |
          CURRENT_VERSION=$(jq '."."' .release-please-manifest.json -r)
          git tag "v$CURRENT_VERSION"
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          git tag
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@9ed2f89a662bf1735a48bc8557fd212fa902bebf # v6.1.0
        with:
          args: release --clean
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Copy additional dist files
        run: |
          cp terraform-registry-manifest.json "dist/${GITHUB_REPOSITORY#*/}_${CURRENT_VERSION}_manifest.json"
          cp gpg-public-key.pem "dist/${GITHUB_REPOSITORY#*/}_${CURRENT_VERSION}_gpg-public-key.pem"
          ls -la dist/
      - name: Prepare dist for upload
        run: |
          find ./dist -mindepth 1 -type d -exec rm -rf "{}" +
          rm ./dist/{artifacts.json,config.yaml}
      - uses: actions/upload-artifact@v4
        with:
          name: go_dist
          path: dist/
  release_please_create_release:
    needs: [ goreleaser ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: go_dist
          path: dist/
      - run: ls -la
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
      - run: gh release upload ${{ steps.release.outputs.tag_name }} dist/*
        env:
          GH_TOKEN: ${{ github.token }}
  release_please_create_pr:
    needs: [ version_changed ]
    if: needs.version_changed.outputs.has_changes == 'false'
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
